{% extends 'base.html.twig' %}

{% block title %} Modifier image {% endblock %}

{% block body %}

<p class="title_admin_video"> Modifier image de la vidéo </p>
<p class="update-video-image-zone">
    <img src="{{asset('images/upload/' ~ video.videoimage)}}" alt="videoimage" class="update-video-image">
</p>

<div class="container">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">

            <div class="form_upload_video">
                <div class="progress invisible" id="progress-bar">
                    <div class="progress-bar"></div>
                </div>
                <div id="uploadStatus"></div>
                {% form_theme updateform 'bootstrap_4_layout.html.twig' %}
                {{form_start(updateform,  {"attr" : {'id':'video_update'}}, {'action': path('update_video', {'id':
                video.id}), 'method': 'POST'})}}
                <div class="form-group">{{form_row(updateform.videoimage, {"attr" : {'class':'form-control'}})}}</div>
                <div class="form-group">{{form_widget(updateform)}}</div>
                <button type="submit" class="btn btn_video" onclick="hideBar()">Modifier image</button>
                {{form_end(updateform)}}
            </div>
        </div>
    </div>
</div>
{% endblock %}



{% block javascript %}
{{parent()}}

<script>
    //permet de rendre visible la barre de progrès lors du téléchargement

    function hideBar() {

        document.getElementById("progress-bar").className = "visible";
    }

    //permet d'afficher le progrès de l'upload via la barre de progrès
    $(document).ready(function () {
        // File upload via Ajax
        $("#video_update").on('submit', function (e) {
            e.preventDefault();
            var video_update = $(this);
            var post_url = video_update.attr('action');
            var post_data = video_update.serialize();
            $.ajax({
                xhr: function () {
                    var xhr = new window.XMLHttpRequest();
                    xhr.upload.addEventListener("progress", function (evt) {
                        if (evt.lengthComputable) {
                            var percentComplete = ((evt.loaded / evt.total) * 100);
                            $(".progress-bar").width(percentComplete + '%');
                            $(".progress-bar").html(percentComplete + '%');
                        }
                    }, false);
                    return xhr;
                },
                type: 'POST',
                url: post_url,
                data: new FormData(this),
                contentType: false,
                cache: false,
                processData: false,
                beforeSend: function () {
                    $(".progress-bar").width('0%');
                },
                error: function () {
                    $('#uploadStatus').html(
                        '<p class="upload-video-failed">Le téléchargement a échoué, merci de recommencer.</p>'
                        );
                },
                success: function (resp) {
                    if (resp == 'ok') {
                        window.document.location = '/update_video_successfull';
                    } else if (resp == 'err') {
                        $('#uploadStatus').html(
                            '<p class="upload-video-failed">Nous acceptons uniquement image au format jpg, jpeg, ou png.</p>'
                            );
                    }
                }
            });
        });
    });
</script>
{% endblock %}
